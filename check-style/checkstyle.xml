<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
    "-//Checkstyle//DTD Checkstyle Configuration 1.3//EN"
    "https://checkstyle.org/dtds/configuration_1_3.dtd">
<module name="Checker">
    <module name="TreeWalker">

        <!-- Imports -->
        <!-- 禁止 import *-->
        <module name="AvoidStarImport"/>

        <!-- Names -->
        <module name="PackageName">
            <message key="name.invalidPattern"
                value="Package name ''{0}'' must match pattern ''{1}''."/>
            <property name="format" value="^[a-z]+(\.[a-z][a-z0-9]*)*$"/>
        </module>
        <module name="TypeName">
            <message key="name.invalidPattern"
                value="Type name ''{0}'' must match pattern ''{1}''."/>
            <property name="tokens" value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF, ANNOTATION_DEF"/>
        </module>
        <module name="MemberName">
            <message key="name.invalidPattern"
                value="Member name ''{0}'' must match pattern ''{1}''."/>
            <property name="format" value="^[a-z][a-z0-9][a-zA-Z0-9]*$"/>
        </module>
        <module name="ParameterName">
            <message key="name.invalidPattern"
                value="Parameter name ''{0}'' must match pattern ''{1}''."/>
            <property name="format" value="^[a-z]([a-z0-9][a-zA-Z0-9]*)?$"/>
        </module>
        <module name="LambdaParameterName">
            <message key="name.invalidPattern"
                value="Lambda parameter name ''{0}'' must match pattern ''{1}''."/>
            <property name="format" value="^[a-z]([a-z0-9][a-zA-Z0-9]*)?$"/>
        </module>
        <module name="CatchParameterName">
            <message key="name.invalidPattern"
                value="Catch parameter name ''{0}'' must match pattern ''{1}''."/>
            <property name="format" value="^[a-z]([a-z0-9][a-zA-Z0-9]*)?$"/>
        </module>
        <module name="LocalVariableName">
            <message key="name.invalidPattern"
                value="Local variable name ''{0}'' must match pattern ''{1}''."/>
            <property name="format" value="^[a-z]([a-z0-9][a-zA-Z0-9]*)?$"/>
        </module>
        <!--        <module name="PatternVariableName">-->
        <!--            <property name="format" value="^[a-z]([a-z0-9][a-zA-Z0-9]*)?$"/>-->
        <!--            <message key="name.invalidPattern" value="Pattern variable name ''{0}'' must match pattern ''{1}''."/>-->
        <!--        </module>-->
        <module name="ClassTypeParameterName">
            <message key="name.invalidPattern"
                value="Class type name ''{0}'' must match pattern ''{1}''."/>
            <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)"/>
        </module>
        <!--        <module name="RecordTypeParameterName">-->
        <!--            <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)"/>-->
        <!--            <message key="name.invalidPattern" value="Record type name ''{0}'' must match pattern ''{1}''."/>-->
        <!--        </module>-->
        <module name="MethodTypeParameterName">
            <message key="name.invalidPattern"
                value="Method type name ''{0}'' must match pattern ''{1}''."/>
            <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)"/>
        </module>
        <module name="InterfaceTypeParameterName">
            <message key="name.invalidPattern"
                value="Interface type name ''{0}'' must match pattern ''{1}''."/>
            <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)"/>
        </module>


        <!-- 参数使用 final 修饰 -->
        <module name="FinalParameters"/>
    </module>
    <property name="severity" value="error"/>
    <!--  文件扩展 -->
    <property name="fileExtensions" value="java, properties, xml"/>


    <property name="charset" value="UTF-8"/>
</module>
