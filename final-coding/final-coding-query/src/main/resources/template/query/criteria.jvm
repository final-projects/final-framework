#set($package = $criteria.packageName)
#set($simpleName = $criteria.simpleName)
#set($properties = $criteria.entity.properties)
#set($qentity = $criteria.entity.simpleName)
#set($criteria = $criteria.simpleName)
#* @formatter:off *#
package ${package};

import org.finalframework.data.query.AbsCriteria;
import org.finalframework.data.query.AbsQuery;
import org.finalframework.data.query.Criteria;
import org.finalframework.data.query.Criterion;
import org.finalframework.data.query.criteriable.Criteriable;
import org.finalframework.data.query.enums.AndOr;

import javax.annotation.Generated;
import java.time.LocalDateTime;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Collections;
import java.util.Date;

#parse("/template/parse/header.vm")
@Generated("org.finalframework.coding.query.CriteriaGenerator")
public final class ${criteria} extends AbsCriteria<${criteria}>{

    protected ${criteria}() {
        super(AndOr.AND, Collections.emptyList());
    }

    protected ${criteria}(AndOr andOr) {
        super(andOr, Collections.emptyList());
    }

    protected ${criteria}(AndOr andOr, Collection<Criteria> criteria) {
        super(andOr, criteria, Collections.emptyList());
    }

    protected ${criteria}(AndOr andOr, Collection<Criteria> criteria, Collection<Criterion> criterion) {
        super(andOr, criteria, criterion);
    }

    protected ${criteria} andOr(AndOr andOr, Collection<Criteria> criteria,Collection<Criterion> criterion) {
        return new ${criteria}(andOr, criteria,criterion);
    }


#foreach($property in $properties)
    #set($_returnValue = $criteria)
    #set($_name = $property.name.substring(0,1).toUpperCase() + $property.name.substring(1))
    #set($_paramterType = $property.type.getQualifiedName().toString().replace("java.lang.",""))
    #set($_paramterName = $property.name)

    #set($_start = $_name.format("%-52s",$_name).replaceAll(" ","="))
    #set($_end = $_name.format("%52s",$_name).replaceAll(" ","="))
    #set($_isDate = $property.isDate())

    //==================================================================================================================
    //=====${_start}${_end}=====
    //==================================================================================================================

    /**
     * @see Criteriable#eq(Object)
     */
    public ${_returnValue} add${_name}Equal(${_paramterType} ${_paramterName}){
        add(${qentity}.${property.name}.eq(${_paramterName}));
        return this;
    }

    /**
     * @see Criteriable#neq(Object)
     */
    public ${_returnValue} add${_name}NotEqual(${_paramterType} ${_paramterName}){
        add(${qentity}.${property.name}.neq(${_paramterName}));
        return this;
    }

    /**
    * @see Criteriable#gt(Object)
    */
    public ${_returnValue} add${_name}GreaterThan(${_paramterType} ${_paramterName}){
        add(${qentity}.${property.name}.gt(${_paramterName}));
        return this;
    }

    /**
    * @see Criteriable#gte(Object)
    */
    public ${_returnValue} add${_name}GreaterThanEqual(${_paramterType} ${_paramterName}){
        add(${qentity}.${property.name}.gte(${_paramterName}));
        return this;
    }


    /**
    * @see Criteriable#lt(Object)
    */
    public ${_returnValue} add${_name}LessThan(${_paramterType} ${_paramterName}){
        add(${qentity}.${property.name}.gt(${_paramterName}));
        return this;
    }

    /**
    * @see Criteriable#lte(Object)
    */
    public ${_returnValue} add${_name}LessThanEqual(${_paramterType} ${_paramterName}){
        add(${qentity}.${property.name}.gte(${_paramterName}));
        return this;
    }

    // in operator

    /**
     * @see Criteriable#in(Object[])
     */
    public ${_returnValue} add${_name}In(${_paramterType}... ${_paramterName}){
        add(${qentity}.${property.name}.in(${_paramterName}));
        return this;
    }

    /**
     * @see Criteriable#in(Collection)
     */
    public ${_returnValue} add${_name}In(Collection<${_paramterType}> ${_paramterName}){
        add(${qentity}.${property.name}.in(${_paramterName}));
        return this;
    }

    /**
     * @see Criteriable#nin(Object[])
     */
    public ${_returnValue} add${_name}NotIn(${_paramterType}... ${_paramterName}){
        add(${qentity}.${property.name}.in(${_paramterName}));
        return this;
    }

    /**
     * @see Criteriable#nin(Collection)
     */
    public ${_returnValue} add${_name}NotIn(Collection<${_paramterType}> ${_paramterName}){
        add(${qentity}.${property.name}.in(${_paramterName}));
        return this;
    }

    // null operator

    /**
     * @see Criteriable#isNull()
     */
    public ${_returnValue} add${_name}IsNull(){
        add(${qentity}.${property.name}.isNull());
        return this;
    }

    /**
     * @see Criteriable#isNotNull()
     */
    public ${_returnValue} add${_name}IsNotNull(){
        add(${qentity}.${property.name}.isNotNull());
        return this;
    }

    // like operator


    /**
    * @see Criteriable#startWith(String)
    */
    public ${_returnValue} add${_name}StartWith(String ${_paramterName}){
        add(${qentity}.${property.name}.startWith(${_paramterName}));
        return this;
    }
    /**
    * @see Criteriable#notStartWith(String)
    */
    public ${_returnValue} add${_name}NotStartWith(String ${_paramterName}){
        add(${qentity}.${property.name}.notStartWith(${_paramterName}));
        return this;
    }
    /**
    * @see Criteriable#endWith(String)
    */
    public ${_returnValue} add${_name}EndWith(String ${_paramterName}){
        add(${qentity}.${property.name}.endWith(${_paramterName}));
        return this;
    }
    /**
    * @see Criteriable#notEndWith(String)
    */
    public ${_returnValue} add${_name}NotEndWith(String ${_paramterName}){
        add(${qentity}.${property.name}.notEndWith(${_paramterName}));
        return this;
    }
    /**
    * @see Criteriable#contains(String)
    */
    public ${_returnValue} add${_name}Contains(String ${_paramterName}){
        add(${qentity}.${property.name}.contains(${_paramterName}));
        return this;
    }
    /**
    * @see Criteriable#notContains(String)
    */
    public ${_returnValue} add${_name}NotContains(String ${_paramterName}){
        add(${qentity}.${property.name}.notContains(${_paramterName}));
        return this;
    }
    /**
    * @see Criteriable#like(String)
    */
    public ${_returnValue} add${_name}Like(String ${_paramterName}){
        add(${qentity}.${property.name}.like(${_paramterName}));
        return this;
    }
    /**
    * @see Criteriable#notLike(String)
    */
    public ${_returnValue} add${_name}NotLike(String ${_paramterName}){
        add(${qentity}.${property.name}.notLike(${_paramterName}));
        return this;
    }

    #if($_isDate)
    // date operator
    /**
    * @see Criteriable#dateEqual(String)
    */
    public ${_returnValue} add${_name}DateEqual(String ${_paramterName}){
        add(${qentity}.${property.name}.dateEqual(${_paramterName}));
        return this;
    }

    /**
    * @see Criteriable#dateEqual(Date)
    */
    public ${_returnValue} add${_name}DateEqual(Date ${_paramterName}){
        add(${qentity}.${property.name}.dateEqual(${_paramterName}));
        return this;
    }
    /**
    * @see Criteriable#dateEqual(long)
    */
    public ${_returnValue} add${_name}DateEqual(long ${_paramterName}){
        add(${qentity}.${property.name}.dateEqual(${_paramterName}));
        return this;
    }
    /**
    * @see Criteriable#notDateEqual(String)
    */
    public ${_returnValue} add${_name}NotDateEqual(String ${_paramterName}){
        add(${qentity}.${property.name}.notDateEqual(${_paramterName}));
        return this;
    }
    /**
    * @see Criteriable#notDateEqual(LocalDateTime)
    */
    public ${_returnValue} add${_name}NotDateEqual(LocalDateTime ${_paramterName}){
        add(${qentity}.${property.name}.notDateEqual(${_paramterName}));
        return this;
    }
    /**
    * @see Criteriable#notDateEqual(Date)
    */
    public ${_returnValue} add${_name}NotDateEqual(Date ${_paramterName}){
        add(${qentity}.${property.name}.notDateEqual(${_paramterName}));
        return this;
    }
    /**
    * @see Criteriable#notDateEqual(long)
    */
    public ${_returnValue} add${_name}NotDateEqual(long ${_paramterName}){
        add(${qentity}.${property.name}.notDateEqual(${_paramterName}));
        return this;
    }
    /**
    * @see Criteriable#dateBefore(String)
    */
    public ${_returnValue} add${_name}DateBefore(String ${_paramterName}){
        add(${qentity}.${property.name}.dateBefore(${_paramterName}));
        return this;
    }
    /**
    * @see Criteriable#dateBefore(LocalDateTime)
    */
    public ${_returnValue} add${_name}DateBefore(LocalDateTime ${_paramterName}){
        add(${qentity}.${property.name}.dateBefore(${_paramterName}));
        return this;
    }
    /**
    * @see Criteriable#dateBefore(Date)
    */
    public ${_returnValue} add${_name}DateBefore(Date ${_paramterName}){
        add(${qentity}.${property.name}.dateBefore(${_paramterName}));
        return this;
    }
    /**
    * @see Criteriable#dateBefore(long)
    */
    public ${_returnValue} add${_name}DateBefore(long ${_paramterName}){
        add(${qentity}.${property.name}.dateBefore(${_paramterName}));
        return this;
    }
    /**
    * @see Criteriable#dateAfter(String)
    */
    public ${_returnValue} add${_name}DateAfter(String ${_paramterName}){
        add(${qentity}.${property.name}.dateAfter(${_paramterName}));
        return this;
    }
    /**
    * @see Criteriable#dateAfter(LocalDateTime)
    */
    public ${_returnValue} add${_name}DateAfter(LocalDateTime ${_paramterName}){
        add(${qentity}.${property.name}.dateAfter(${_paramterName}));
        return this;
    }
    /**
    * @see Criteriable#dateAfter(Date)
    */
    public ${_returnValue} add${_name}DateAfter(Date ${_paramterName}){
        add(${qentity}.${property.name}.dateAfter(${_paramterName}));
        return this;
    }
    /**
    * @see Criteriable#dateAfter(long)
    */
    public ${_returnValue} add${_name}DateAfter(long ${_paramterName}){
        add(${qentity}.${property.name}.dateAfter(${_paramterName}));
        return this;
    }


    /**
    * @see Criteriable#dateBetween(String,String)
    */
    public ${_returnValue} add${_name}DateBetween(String min,String max){
        add(${qentity}.${property.name}.dateBetween(min, max));
        return this;
    }
    /**
    * @see Criteriable#dateBetween(LocalDateTime,LocalDateTime)
    */
    public ${_returnValue} add${_name}DateBetween(LocalDateTime min,LocalDateTime max){
        add(${qentity}.${property.name}.dateBetween(min, max));
        return this;
    }
    /**
    * @see Criteriable#dateBetween(Date,Date)
    */
    public ${_returnValue} add${_name}DateBetween(Date min,Date max){
        add(${qentity}.${property.name}.dateBetween(min, max));
        return this;
    }
    /**
    * @see Criteriable#dateBetween(long,long)
    */
    public ${_returnValue} add${_name}DateBetween(long min,long max){
        add(${qentity}.${property.name}.dateBetween(min, max));
        return this;
    }
    /**
    * @see Criteriable#notDateBetween(String,String)
    */
    public ${_returnValue} add${_name}NotDateBetween(String min, String max){
        add(${qentity}.${property.name}.notDateBetween(min, max));
        return this;
    }
    /**
    * @see Criteriable#notDateBetween(LocalDateTime,LocalDateTime)
    */
    public ${_returnValue} add${_name}NotDateBetween(LocalDateTime min, LocalDateTime max){
        add(${qentity}.${property.name}.notDateBetween(min, max));
        return this;
    }
    /**
    * @see Criteriable#notDateBetween(Date,Date)
    */
    public ${_returnValue} add${_name}NotDateBetween(Date min, Date max){
        add(${qentity}.${property.name}.notDateBetween(min, max));
        return this;
    }
    /**
    * @see Criteriable#notDateBetween(long,long)
    */
    public ${_returnValue} add${_name}NotDateBetween(long min, long max){
        add(${qentity}.${property.name}.notDateBetween(min, max));
        return this;
    }

    #end

    // max operator

    /**
    * @see Criteriable#maxEqual(Number)
    */
    public ${_returnValue} add${_name}MaxEqual(Number ${_paramterName}){
        add(${qentity}.${property.name}.maxEqual(${_paramterName}));
        return this;
    }
    /**
    * @see Criteriable#maxNotEqual(Number)
    */
    public ${_returnValue} add${_name}MaxNotEqual(Number ${_paramterName}){
        add(${qentity}.${property.name}.maxNotEqual(${_paramterName}));
        return this;
    }
    /**
    * @see Criteriable#maxGreaterThan(Number)
    */
    public ${_returnValue} add${_name}MaxGreaterThan(Number ${_paramterName}){
        add(${qentity}.${property.name}.maxGreaterThan(${_paramterName}));
        return this;
    }
    /**
    * @see Criteriable#maxGreaterThanEqual(Number)
    */
    public ${_returnValue} add${_name}MaxGreaterThanEqual(Number ${_paramterName}){
        add(${qentity}.${property.name}.maxGreaterThanEqual(${_paramterName}));
        return this;
    }
    /**
    * @see Criteriable#maxLessThan(Number)
    */
    public ${_returnValue} add${_name}MaxLessThan(Number ${_paramterName}){
        add(${qentity}.${property.name}.maxLessThan(${_paramterName}));
        return this;
    }
    /**
     * @see Criteriable#maxLessThanEqual(Number)
    */
    public ${_returnValue} add${_name}MaxLessThanEqual(Number ${_paramterName}){
        add(${qentity}.${property.name}.maxLessThanEqual(${_paramterName}));
        return this;
    }

    /**
     * @see Criteriable#maxIn(Collection)
     */
    public ${_returnValue} add${_name}MaxIn(Collection<Number> ${_paramterName}){
        add(${qentity}.${property.name}.maxIn(${_paramterName}));
        return this;
    }
    /**
    * @see Criteriable#maxNotIn(Collection)
    */
    public ${_returnValue} add${_name}MaxNotIn(Collection<Number> ${_paramterName}){
        add(${qentity}.${property.name}.maxNotIn(${_paramterName}));
        return this;
    }

    /**
    * @see Criteriable#maxBetween(Number,Number)
    */
    public ${_returnValue} add${_name}MaxBetween(Number min,Number max){
        add(${qentity}.${property.name}.maxBetween(min, max));
        return this;
    }
    /**
    * @see Criteriable#maxNotBetween(Number,Number)
    */
    public ${_returnValue} add${_name}MaxNotBetween(Number min,Number max){
        add(${qentity}.${property.name}.maxNotBetween(min, max));
        return this;
    }


    // min operator

    /**
     * @see Criteriable#maxEqual(Number)
     */
    public ${_returnValue} add${_name}MinEqual(Number ${_paramterName}){
        add(${qentity}.${property.name}.minEqual(${_paramterName}));
        return this;
    }
    /**
     * @see Criteriable#minNotEqual(Number)
     */
    public ${_returnValue} add${_name}MinNotEqual(Number ${_paramterName}){
        add(${qentity}.${property.name}.minNotEqual(${_paramterName}));
        return this;
    }
    /**
     * @see Criteriable#minGreaterThan(Number)
     */
    public ${_returnValue} add${_name}MinGreaterThan(Number ${_paramterName}){
        add(${qentity}.${property.name}.minGreaterThan(${_paramterName}));
        return this;
    }
    /**
     * @see Criteriable#minGreaterThanEqual(Number)
    */
    public ${_returnValue} add${_name}MinGreaterThanEqual(Number ${_paramterName}){
        add(${qentity}.${property.name}.minGreaterThanEqual(${_paramterName}));
        return this;
        }
    /**
    * @see Criteriable#minLessThan(Number)
    */
    public ${_returnValue} add${_name}MinLessThan(Number ${_paramterName}){
        add(${qentity}.${property.name}.minLessThan(${_paramterName}));
        return this;
    }
    /**
     * @see Criteriable#minLessThanEqual(Number)
     */
    public ${_returnValue} add${_name}MinLessThanEqual(Number ${_paramterName}){
        add(${qentity}.${property.name}.minLessThanEqual(${_paramterName}));
        return this;
    }

    /**
     * @see Criteriable#minIn(Collection)
     */
    public ${_returnValue} add${_name}MinIn(Collection<Number> ${_paramterName}){
        add(${qentity}.${property.name}.minIn(${_paramterName}));
        return this;
    }
    /**
     * @see Criteriable#minNotIn(Collection)
     */
    public ${_returnValue} add${_name}MinNotIn(Collection<Number> ${_paramterName}){
        add(${qentity}.${property.name}.minNotIn(${_paramterName}));
        return this;
    }

    /**
     * @see Criteriable#minBetween(Number,Number)
     */
    public ${_returnValue} add${_name}MinBetween(Number min,Number max){
        add(${qentity}.${property.name}.minBetween(min, max));
        return this;
    }
    /**
     * @see Criteriable#minNotBetween(Number,Number)
     */
    public ${_returnValue} add${_name}MinNotBetween(Number min,Number max){
        add(${qentity}.${property.name}.minNotBetween(min, max));
        return this;
    }


    // sum operator

    /**
     * @see Criteriable#sumEqual(Number)
     */
    public ${_returnValue} add${_name}SumEqual(Number ${_paramterName}){
        add(${qentity}.${property.name}.sumEqual(${_paramterName}));
        return this;
        }
    /**
     * @see Criteriable#sumNotEqual(Number)
     */
    public ${_returnValue} add${_name}SumNotEqual(Number ${_paramterName}){
        add(${qentity}.${property.name}.sumNotEqual(${_paramterName}));
        return this;
        }
    /**
     * @see Criteriable#sumGreaterThan(Number)
     */
    public ${_returnValue} add${_name}SumGreaterThan(Number ${_paramterName}){
        add(${qentity}.${property.name}.sumGreaterThan(${_paramterName}));
        return this;
        }
    /**
     * @see Criteriable#sumGreaterThanEqual(Number)
     */
    public ${_returnValue} add${_name}SumGreaterThanEqual(Number ${_paramterName}){
        add(${qentity}.${property.name}.sumGreaterThanEqual(${_paramterName}));
        return this;
        }
    /**
     * @see Criteriable#sumLessThan(Number)
     */
    public ${_returnValue} add${_name}SumLessThan(Number ${_paramterName}){
        add(${qentity}.${property.name}.sumLessThan(${_paramterName}));
        return this;
        }
    /**
     * @see Criteriable#sumLessThanEqual(Number)
     */
    public ${_returnValue} add${_name}SumLessThanEqual(Number ${_paramterName}){
        add(${qentity}.${property.name}.sumLessThanEqual(${_paramterName}));
        return this;
        }

    /**
     * @see Criteriable#sumIn(Collection)
     */
    public ${_returnValue} add${_name}SumIn(Collection<Number> ${_paramterName}){
        add(${qentity}.${property.name}.sumIn(${_paramterName}));
        return this;
        }
    /**
     * @see Criteriable#sumNotIn(Collection)
     */
    public ${_returnValue} add${_name}SumNotIn(Collection<Number> ${_paramterName}){
        add(${qentity}.${property.name}.sumNotIn(${_paramterName}));
        return this;
        }

    /**
     * @see Criteriable#sumBetween(Number,Number)
     */
    public ${_returnValue} add${_name}SumBetween(Number min,Number max){
        add(${qentity}.${property.name}.sumBetween(min, max));
        return this;
        }
    /**
     * @see Criteriable#sumNotBetween(Number,Number)
     */
    public ${_returnValue} add${_name}SumNotBetween(Number min,Number max){
        add(${qentity}.${property.name}.sumNotBetween(min, max));
        return this;
        }


    // avg operator

    /**
     * @see Criteriable#avgEqual(Number)
     */
    public ${_returnValue} add${_name}AvgEqual(Number ${_paramterName}){
        add(${qentity}.${property.name}.avgEqual(${_paramterName}));
        return this;
        }
    /**
     * @see Criteriable#avgNotEqual(Number)
     */
    public ${_returnValue} add${_name}AvgNotEqual(Number ${_paramterName}){
        add(${qentity}.${property.name}.avgNotEqual(${_paramterName}));
        return this;
        }
    /**
     * @see Criteriable#avgGreaterThan(Number)
     */
    public ${_returnValue} add${_name}AvgGreaterThan(Number ${_paramterName}){
        add(${qentity}.${property.name}.avgGreaterThan(${_paramterName}));
        return this;
        }
    /**
     * @see Criteriable#avgGreaterThanEqual(Number)
     */
    public ${_returnValue} add${_name}AvgGreaterThanEqual(Number ${_paramterName}){
        add(${qentity}.${property.name}.avgGreaterThanEqual(${_paramterName}));
        return this;
        }
    /**
     * @see Criteriable#avgLessThan(Number)
     */
    public ${_returnValue} add${_name}AvgLessThan(Number ${_paramterName}){
        add(${qentity}.${property.name}.avgLessThan(${_paramterName}));
        return this;
        }
    /**
     * @see Criteriable#avgLessThanEqual(Number)
     */
    public ${_returnValue} add${_name}AvgLessThanEqual(Number ${_paramterName}){
        add(${qentity}.${property.name}.avgLessThanEqual(${_paramterName}));
        return this;
        }

    /**
     * @see Criteriable#avgIn(Collection)
     */
    public ${_returnValue} add${_name}AvgIn(Collection<Number> ${_paramterName}){
        add(${qentity}.${property.name}.avgIn(${_paramterName}));
        return this;
        }
    /**
     * @see Criteriable#avgNotIn(Collection)
     */
    public ${_returnValue} add${_name}AvgNotIn(Collection<Number> ${_paramterName}){
        add(${qentity}.${property.name}.avgNotIn(${_paramterName}));
        return this;
        }

    /**
     * @see Criteriable#avgBetween(Number,Number)
     */
    public ${_returnValue} add${_name}AvgBetween(Number min,Number max){
        add(${qentity}.${property.name}.avgBetween(min, max));
        return this;
        }
    /**
     * @see Criteriable#avgNotBetween(Number,Number)
     */
    public ${_returnValue} add${_name}AvgNotBetween(Number min,Number max){
        add(${qentity}.${property.name}.avgNotBetween(min, max));
        return this;
    }

    #end

}

